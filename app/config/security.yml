# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        Jims\PeteBundle\Entity\Guest:
            algorithm: bcrypt
        Jims\PeteBundle\Entity\User:
            algorithm: bcrypt
            #algorithm: plaintext
            #ignore_case: false
        Jims\PeteBundle\Security\WebserviceUser: bcrypt
        Jims\StudyBundle\Entity\StUser: bcrypt

    # ...

    role_hierarchy:
        ROLE_USER: [ ROLE_USELESS, ROLE_NOTHING, ROLE_ALLOWED_TO_SWITCH ]
        ROLE_ADMIN: [ ROLE_USER ]



    providers:
        webservice:
            id: webservice_user_provider
        db_gueset_provider_1:
            entity:
                class: JimsPeteBundle:Guest
        db_gueset_provider_2:
            entity:
                class: JimsPeteBundle:Guest
                property: account
                # if you're using multiple entity managers
                # manager_name: customer
        db_user_provider:
            entity:
                class: JimsPeteBundle:User
                property: username
        st_user_provider:
            entity:
                class: JimsStudyBundle:StUser


    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        study:
            pattern: ^/(study|article)
            #ecurity: true
            anonymous: true
            context: study
            provider: st_user_provider
            remember_me:
                key: "jimsStudy"
            switch_user: ~
            form_login:
                check_path: study_login_check
                login_path: study_login_path
                default_target_path: study_login_path
            logout:
                path: study_login_out
                target: study_login_path

        blog_area:
            pattern: ^/blog
            anonymous: true
            provider: webservice
            context: blog
            form_login:
                check_path: JimsUiop_login_check
                login_path: JimsUiop_login

                # if true, forward the user to the login form instead of redirecting
                use_forward: false
                default_target_path: JimsUiop_homepage
            logout:
                path: JimsUiop_logout
                target: JimsUiop_homepage
        secured_area:
            pattern: ^/
            anonymous: true
            context: xxx
            form_login:
                check_path: security_login_check
                login_path: security_login_form

                # if true, forward the user to the login form instead of redirecting
                use_forward: false
                default_target_path: /admin/dashboard
            logout:
                path: security_logout
                target: security_login_form
            provider: webservice
        #public_area:
         #   pattern: ^/
         #   anonymous: true



    access_control:
            # require ROLE_ADMIN for /admin*
            - { path: ^/admin, roles: ROLE_ADMIN }
            #- { path: ^/admin/users, roles: ROLE_SUPER_ADMIN }


            #--------study------#
            #- { path: ^/stuser, roles: ROLE_USER }
